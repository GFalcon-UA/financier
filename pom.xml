<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>ua.com.gfalcon</groupId>
    <artifactId>financier</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>financier</name>
    <description>financier</description>
    <properties>
        <java.version>17</java.version>
        <testcontainers.version>1.18.0</testcontainers.version>

      <node.version>v18.14.1</node.version>
      <npm.version>9.6.5</npm.version>

      <springdoc-openapi.version>2.1.0</springdoc-openapi.version>
      <javadoc-openapi.version>0.15.0</javadoc-openapi.version>
    </properties>
  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-quartz</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-bridge-brave</artifactId>
    </dependency>
    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
      <version>${springdoc-openapi.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
      <version>${springdoc-openapi.version}</version>
    </dependency>
    <dependency>
      <groupId>com.github.therapi</groupId>
      <artifactId>therapi-runtime-javadoc</artifactId>
      <version>${javadoc-openapi.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>ua.com.gfalcon</groupId>
      <artifactId>finviz-api</artifactId>
      <version>0.1.1</version>
    </dependency>
    <dependency>
      <groupId>com.yahoofinance-api</groupId>
      <artifactId>YahooFinanceAPI</artifactId>
      <version>3.17.0</version>
    </dependency>
  </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>build-info</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <excludes>
                <exclude>
                  <groupId>org.projectlombok</groupId>
                  <artifactId>lombok</artifactId>
                </exclude>
              </excludes>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <configuration>
              <generateBackupPoms>false</generateBackupPoms>
              <ruleSet>
                <ignoredVersions>
                  <ignoreVersion>
                    <type>regex</type>
                    <version>(.+-SNAPSHOT|.+-M\d)</version>
                  </ignoreVersion>
                  <ignoreVersion>
                    <type>regex</type>
                    <version>(?i).*[-_\.](alpha|beta|rc|cr|m|ea|dev|b)[-_\.]?[0-9]?.*</version>
                  </ignoreVersion>
                  <ignoreVersion>
                    <type>regex</type>
                    <version>(?i).*[-_\.]jboss[0-9\.]*</version>
                  </ignoreVersion>
                  <ignoreVersion>
                    <type>regex</type>
                    <version>(?i).*[-_\.]nightly[0-9\.]*</version>
                  </ignoreVersion>
                  <ignoreVersion>
                    <type>regex</type>
                    <version>(?i).*-atlassian-[0-9\.]*</version>
                  </ignoreVersion>
                  <ignoreVersion>
                    <type>regex</type>
                    <version>(?i).*-jenkins-[0-9\.]*</version>
                  </ignoreVersion>
                  <ignoreVersion>
                    <type>regex</type>
                    <version>.*[-\.]redhat-[0-9]+</version>
                  </ignoreVersion>
                  <ignoreVersion>
                    <!-- z.B. commons-collections:commons-collections ... 3.2.1.redhat-7 -> 20040117.000000 -->
                    <type>regex</type>
                    <version>\d{4,}.*</version>
                  </ignoreVersion>
                </ignoredVersions>
                <rules>
                  <rule>
                    <groupId>antlr</groupId>
                    <ignoreVersions>
                      <ignoreVersion>20030911</ignoreVersion>
                    </ignoreVersions>
                    <comparisonMethod>maven</comparisonMethod>
                  </rule>
                </rules>
              </ruleSet>


            </configuration>
            <executions>
              <execution>
                <id>update</id>
                <phase>validate</phase>
                <goals>
                  <goal>update-parent</goal>
                  <goal>update-properties</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <parameters>true</parameters>
              <annotationProcessorPaths>
                <path>
                  <groupId>com.github.therapi</groupId>
                  <artifactId>therapi-runtime-javadoc-scribe</artifactId>
                  <version>${javadoc-openapi.version}</version>
                </path>
                <path>
                  <groupId>org.projectlombok</groupId>
                  <artifactId>lombok</artifactId>
                  <version>${lombok.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <version>3.1.2</version>
            <dependencies>
              <dependency>
                <groupId>com.puppycrawl.tools</groupId>
                <artifactId>checkstyle</artifactId>
                <version>8.43</version>
              </dependency>
            </dependencies>
            <configuration>
              <configLocation>style/checkstyle.xml</configLocation>
              <includeTestSourceDirectory>false</includeTestSourceDirectory>
              <excludes>.git/**/*,target/**/*,node_modules/**/*,node/**/*</excludes>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <linkXRef>false</linkXRef>
              <violationSeverity>warning</violationSeverity>
              <failOnViolation>true</failOnViolation>
            </configuration>
            <executions>
              <execution>
                <id>validate</id>
                <phase>validate</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.sonatype.ossindex.maven</groupId>
            <artifactId>ossindex-maven-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <id>audit-dependencies</id>
                <phase>validate</phase>
                <goals>
                  <goal>audit</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <fail>false</fail>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <source>${maven.compiler.source}</source>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <executions>
              <execution>
                <id>default-war</id>
                <goals>
                  <goal>war</goal>
                </goals>
                <phase>package</phase>
              </execution>
            </executions>
            <configuration>
              <warSourceIncludes>WEB-INF/**,META-INF/**</warSourceIncludes>
              <failOnMissingWebXml>false</failOnMissingWebXml>
              <warSourceDirectory>target/classes/static/</warSourceDirectory>
              <webResources>
                <resource>
                  <directory>src/main/webapp</directory>
                  <includes>
                    <include>WEB-INF/**</include>
                  </includes>
                </resource>
              </webResources>
            </configuration>
          </plugin>




          <plugin>
            <groupId>io.github.git-commit-id</groupId>
            <artifactId>git-commit-id-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>revision</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <failOnNoGitDirectory>false</failOnNoGitDirectory>
              <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
              <generateGitPropertiesFile>true</generateGitPropertiesFile>
              <includeOnlyProperties>
                <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
                <includeOnlyProperty>^git.branch$</includeOnlyProperty>
              </includeOnlyProperties>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.8</version>
            <executions>
              <execution>
                <id>pre-unit-tests</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
              <execution>
                <id>post-unit-test</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>pre-integration-tests</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <!-- Ensures that the code coverage report for integration tests is created after integration tests have been run -->
              <execution>
                <id>post-integration-tests</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report-integration</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <id>enforce-dependencyConvergence</id>
                <configuration>
                  <rules>
                    <DependencyConvergence />
                  </rules>
                  <fail>false</fail>
                </configuration>
                <goals>
                  <goal>enforce</goal>
                </goals>
              </execution>
            </executions>
          </plugin>


          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>default-resources</id>
                <phase>validate</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/classes</outputDirectory>
                  <useDefaultDelimiters>false</useDefaultDelimiters>
                  <delimiters>
                    <delimiter>${resource.delimiter}</delimiter>
                  </delimiters>
                  <resources>
                    <resource>
                      <directory>src/main/resources/</directory>
                      <filtering>true</filtering>
                      <includes>
                        <include>config/*.yml</include>
                      </includes>
                    </resource>
                    <resource>
                      <directory>src/main/resources/</directory>
                      <filtering>false</filtering>
                      <excludes>
                        <exclude>config/*.yml</exclude>
                      </excludes>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <!-- Force alphabetical order to have a reproducible build -->
              <runOrder>alphabetical</runOrder>
              <excludes>
                <exclude>**/*IT*</exclude>
                <exclude>**/*IntTest*</exclude>
              </excludes>
            </configuration>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
          </plugin>

          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.12.1</version>
            <configuration>
              <installDirectory>target</installDirectory>
            </configuration>
            <executions>
              <execution>
                <id>install-node-and-npm</id>
                <goals>
                  <goal>install-node-and-npm</goal>
                </goals>
                <configuration>
                  <nodeVersion>${node.version}</nodeVersion>
                  <npmVersion>${npm.version}</npmVersion>
                </configuration>
              </execution>
              <execution>
                <id>npm install</id>
                <goals>
                  <goal>npm</goal>
                </goals>
              </execution>
              <execution>
                <id>webapp build dev</id>
                <goals>
                  <goal>npm</goal>
                </goals>
                <phase>generate-resources</phase>
                <configuration>
                  <arguments>run build</arguments>
                  <environmentVariables>
                    <APP_VERSION>${project.version}</APP_VERSION>
                  </environmentVariables>
                  <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
    </build>

</project>
