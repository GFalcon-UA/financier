<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016-2023 Oleksii Khalikov @GFalcon-UA (http://gfalcon.com.ua)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.0.6</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>ua.com.gfalcon</groupId>
    <artifactId>financier</artifactId>
    <version>${revision}</version>
    <name>financier</name>
    <description>financier</description>
    <packaging>pom</packaging>

    <modules>
        <module>core</module>
        <module>util</module>
        <module>model</module>
        <module>front</module>
        <module>rest</module>
    </modules>


    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profile>dev</spring.profile>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <spring.profile>prod</spring.profile>
            </properties>
        </profile>
        <profile>
            <id>build-front</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <skip-frontend-maven-plugin>false</skip-frontend-maven-plugin>
            </properties>
        </profile>
    </profiles>

    <properties>
        <revision>1.0.0-SNAPSHOT</revision>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <jococo.instruction.cover.min>0.6</jococo.instruction.cover.min>
        <jococo.branch.cover.min>0.35</jococo.branch.cover.min>
        <jococo.lines.cover.min>65%</jococo.lines.cover.min>
        <jococo.methods.uncover.max>0.30</jococo.methods.uncover.max>
        <jococo.classes.uncover.max>0.20</jococo.classes.uncover.max>
        <jococo.complexity.uncover.max>0.4</jococo.complexity.uncover.max>
        <mutations.killed.percent.min>40</mutations.killed.percent.min> <!-- percent of killed mutations -->
        <mutations.lines.cover.percent.min>60</mutations.lines.cover.percent.min> <!-- percent of line coverage (for mutated classes only) -->
        <mutations.test.strength.percent.min>50</mutations.test.strength.percent.min>

        <node.version>v18.14.1</node.version>
        <npm.version>9.6.5</npm.version>

        <skip-frontend-maven-plugin>true</skip-frontend-maven-plugin>

        <checkstyle.version>10.10.0</checkstyle.version>
        <finviz-api.version>0.1.1</finviz-api.version>
        <javadoc-openapi.version>0.15.0</javadoc-openapi.version>
        <snakeyaml.version>2.0</snakeyaml.version>
        <spring-boot-admin.version>3.0.4</spring-boot-admin.version>
        <spring-cloud.version>2022.0.2</spring-cloud.version>
        <spring-shell.version>3.0.3</spring-shell.version>
        <springdoc-openapi.version>2.1.0</springdoc-openapi.version>
        <ta4j.version>0.15</ta4j.version>
        <testcontainers.version>1.19.6</testcontainers.version>
        <yahoofinance-api.version>3.17.0</yahoofinance-api.version>

        <frontend-maven-plugin.version>1.12.1</frontend-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.2.2</maven-checkstyle-plugin.version>
        <ossindex-maven-plugin.version>3.2.0</ossindex-maven-plugin.version>
        <pitest-maven.version>1.13.1</pitest-maven.version>
        <pitest-junit5-plugin.version>1.1.2</pitest-junit5-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.shell</groupId>
                <artifactId>spring-shell-dependencies</artifactId>
                <version>${spring-shell.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-dependencies</artifactId>
                <version>${spring-boot-admin.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
                <version>${springdoc-openapi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-starter-webflux-ui</artifactId>
                <version>${springdoc-openapi.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.therapi</groupId>
                <artifactId>therapi-runtime-javadoc</artifactId>
                <version>${javadoc-openapi.version}</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>ua.com.gfalcon</groupId>
                <artifactId>finviz-api</artifactId>
                <version>${finviz-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.yahoofinance-api</groupId>
                <artifactId>YahooFinanceAPI</artifactId>
                <version>${yahoofinance-api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ta4j</groupId>
                <artifactId>ta4j-core</artifactId>
                <version>${ta4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.javamoney</groupId>
                <artifactId>moneta</artifactId>
                <version>1.4.2</version>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.hibernate.orm.tooling</groupId>
                <artifactId>hibernate-enhance-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.sonatype.ossindex.maven</groupId>
                <artifactId>ossindex-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>io.github.git-commit-id</groupId>
                <artifactId>git-commit-id-maven-plugin</artifactId>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.jacoco</groupId>-->
<!--                <artifactId>jacoco-maven-plugin</artifactId>-->
<!--            </plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

<!--            <plugin>-->
<!--                <groupId>org.pitest</groupId>-->
<!--                <artifactId>pitest-maven</artifactId>-->
<!--            </plugin>-->

        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <excludes>
                            <exclude>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.hibernate.orm.tooling</groupId>
                    <artifactId>hibernate-enhance-maven-plugin</artifactId>
                    <version>${hibernate.version}</version>
                    <executions>
                        <execution>
                            <id>enhance</id>
                            <goals>
                                <goal>enhance</goal>
                            </goals>
                            <configuration>
                                <enableLazyInitialization>true</enableLazyInitialization>
                                <enableDirtyTracking>true</enableDirtyTracking>
                                <enableAssociationManagement>true</enableAssociationManagement>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                        <allowSnapshots>false</allowSnapshots>
                    </configuration>
                    <executions>
                        <execution>
                            <id>update</id>
                            <phase>validate</phase>
                            <goals>
                                <!--                            <goal>update-parent</goal>-->
                                <goal>update-properties</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <parameters>true</parameters>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>com.github.therapi</groupId>
                                <artifactId>therapi-runtime-javadoc-scribe</artifactId>
                                <version>${javadoc-openapi.version}</version>
                            </path>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${checkstyle.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <configLocation>style/checkstyle.xml</configLocation>
                        <includeTestSourceDirectory>false</includeTestSourceDirectory>
                        <excludes>.git/**/*,target/**/*,node_modules/**/*,node/**/*</excludes>
                        <inputEncoding>UTF-8</inputEncoding>
                        <outputEncoding>UTF-8</outputEncoding>
                        <consoleOutput>true</consoleOutput>
                        <failsOnError>true</failsOnError>
                        <linkXRef>false</linkXRef>
                        <violationSeverity>warning</violationSeverity>
                        <failOnViolation>true</failOnViolation>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.sonatype.ossindex.maven</groupId>
                    <artifactId>ossindex-maven-plugin</artifactId>
                    <version>${ossindex-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>audit-dependencies</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>audit</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <fail>false</fail>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>io.github.git-commit-id</groupId>
                    <artifactId>git-commit-id-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <failOnNoGitDirectory>false</failOnNoGitDirectory>
                        <failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <includeOnlyProperties>
                            <includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
                            <includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
                            <includeOnlyProperty>^git.branch$</includeOnlyProperty>
                        </includeOnlyProperties>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-tests</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pre-integration-tests</id>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                        </execution>
                        <!-- Ensures that the code coverage report for integration tests is created after integration tests have been run -->
                        <execution>
                            <id>post-integration-tests</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                        </execution>

                        <execution>
                            <id>default-check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>INSTRUCTION</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${jococo.instruction.cover.min}</minimum>
                                            </limit>
                                        </limits>
                                    </rule>

                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>BRANCH</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${jococo.branch.cover.min}</minimum>
                                            </limit>
                                        </limits>
                                    </rule>

                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>COMPLEXITY</counter>
                                                <value>MISSEDRATIO</value>
                                                <maximum>${jococo.complexity.uncover.max}</maximum>
                                            </limit>
                                        </limits>
                                    </rule>

                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>LINE</counter>
                                                <value>COVEREDRATIO</value>
                                                <minimum>${jococo.lines.cover.min}</minimum>
                                            </limit>
                                        </limits>
                                    </rule>

                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>METHOD</counter>
                                                <value>MISSEDRATIO</value>
                                                <maximum>${jococo.methods.uncover.max}</maximum>
                                            </limit>
                                        </limits>
                                    </rule>

                                    <rule>
                                        <element>BUNDLE</element>
                                        <limits>
                                            <limit>
                                                <counter>CLASS</counter>
                                                <value>MISSEDRATIO</value>
                                                <maximum>${jococo.classes.uncover.max}</maximum>
                                            </limit>
                                        </limits>
                                    </rule>

                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>enforce-dependencyConvergence</id>
                            <configuration>
                                <rules>
                                    <DependencyConvergence/>
                                </rules>
                                <fail>false</fail>
                            </configuration>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <!-- Force alphabetical order to have a reproducible build -->
                        <runOrder>alphabetical</runOrder>
                        <excludes>
                            <exclude>**/*IT*</exclude>
                            <exclude>**/*IntTest*</exclude>
                        </excludes>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${frontend-maven-plugin.version}</version>
                    <configuration>
                        <installDirectory>target</installDirectory>
                        <skip>${skip-frontend-maven-plugin}</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>install-node-and-npm</id>
                            <goals>
                                <goal>install-node-and-npm</goal>
                            </goals>
                            <configuration>
                                <nodeVersion>${node.version}</nodeVersion>
                                <npmVersion>${npm.version}</npmVersion>
                            </configuration>
                        </execution>
                        <execution>
                            <id>npm install</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>webapp build dev</id>
                            <goals>
                                <goal>npm</goal>
                            </goals>
                            <phase>generate-resources</phase>
                            <configuration>
                                <arguments>run build</arguments>
                                <environmentVariables>
                                    <APP_VERSION>${project.version}</APP_VERSION>
                                </environmentVariables>
                                <npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest-maven.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.pitest</groupId>
                            <artifactId>pitest-junit5-plugin</artifactId>
                            <version>${pitest-junit5-plugin.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <mutators>
                            <mutator>ALL</mutator>
                        </mutators>
                        <threads>4</threads>
                        <timestampedReports>true</timestampedReports>
                        <skip>false</skip>
                        <failWhenNoMutations>false</failWhenNoMutations>
                        <testStrengthThreshold>${mutations.test.strength.percent.min}</testStrengthThreshold>
                        <mutationThreshold>${mutations.killed.percent.min}</mutationThreshold> <!-- minimal % of killed mutations -->
                        <coverageThreshold>${mutations.lines.cover.percent.min}</coverageThreshold> <!-- minimal % line coverage for mutated classes -->
                    </configuration>
                    <executions>
                        <execution>
                            <id>pitest</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>mutationCoverage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <configuration>
                    <skip>false</skip>
                    <reportsDirectory>${project.build.directory}/pit-custom-output-dir</reportsDirectory>
                    <sourceDataFormats>
                        <sourceDataFormat>HTML</sourceDataFormat>
                    </sourceDataFormats>
                    <siteReportName>my-pit-report-name</siteReportName>
                    <siteReportDescription>my pit report custom description</siteReportDescription>
                    <siteReportDirectory>pit-custom-site-directory</siteReportDirectory>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <repository>
            <id>netflix-candidates</id>
            <name>Netflix Candidates</name>
            <url>https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>


</project>
